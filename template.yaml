AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  myfav-coworker

  Sample SAM Template for myfav-coworker

Parameters:
  GoogleApiKey:
    Type: String
    Description: Google API Key for Gemini AI agent functionality
    NoEcho: true

Globals:
  Function:
    Timeout: 300
    MemorySize: 512
    Runtime: python3.13
    Environment:
      Variables:
        DYNAMODB_TABLE_NAME: !Ref MainTable
  Api:
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"

Resources:
  MainTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: myfav-coworker-main
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  SimulationQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: myfav-coworker-simulation-queue
      VisibilityTimeout: 900
      MessageRetentionPeriod: 1209600
      ReceiveMessageWaitTimeSeconds: 20

  MyfavCoworkerApi:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.lambda_handler
      Runtime: python3.13
      Architectures:
        - x86_64
      Environment:
        Variables:
          SQS_QUEUE_URL: https://sqs.us-east-1.amazonaws.com/220843429308/myfav-coworker-simulation-queue
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref MainTable
        - SQSSendMessagePolicy:
            QueueName: !GetAtt SimulationQueue.QueueName
        - SSMParameterReadPolicy:
            ParameterName: /myfav-coworker/github-client-id
        - SSMParameterReadPolicy:
            ParameterName: /myfav-coworker/github-client-secret
        - SSMParameterReadPolicy:
            ParameterName: /myfav-coworker/github-token-encryption-key
        - SSMParameterReadPolicy:
            ParameterName: /myfav-coworker/jwt-secret-key
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY

  SimulationWorker:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: worker.lambda_handler
      Runtime: python3.13
      Timeout: 900
      MemorySize: 1024
      Architectures:
        - x86_64
      Environment:
        Variables:
          SIMULATION_BROWSER_TIMEOUT: 30000
          SIMULATION_SCRIPT_TIMEOUT: 300000
          SIMULATION_HEADLESS: true
          GOOGLE_API_KEY: !Ref GoogleApiKey
          AI_AGENT_TIMEOUT: 60
          AI_AGENT_MAX_RETRIES: 3
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref MainTable
        - SQSPollerPolicy:
            QueueName: !GetAtt SimulationQueue.QueueName
        - SSMParameterReadPolicy:
            ParameterName: /myfav-coworker/github-token-encryption-key
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SimulationQueue.Arn
            BatchSize: 1
            MaximumBatchingWindowInSeconds: 0

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  GitHubLoginUrl:
    Description: "GitHub OAuth login URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/auth/github"
  GitHubCallbackUrl:
    Description: "GitHub OAuth callback URL (use this in your GitHub OAuth App)"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/auth/github/callback"
  DynamoDBTableName:
    Description: "DynamoDB table name"
    Value: !Ref MainTable
  SimulationQueueUrl:
    Description: "SQS queue URL for simulation jobs"
    Value: !Ref SimulationQueue
